* при старте программа создает схему test и таблицы. Требуется указать только логин-пароль от вашей базы в scr/main/resources/application.yml
* при старте создается несколько стандартных пользователей и несколько сотен автогенерируемых
* программа сама делает активным браузер и открывает /localhost/
* у пользователей могут быть русские логины-пароли и по ним можно логиниться
* рядом со страницей логина страница регистрации. если нет аккаунта - можно зарегистрироваться как гость.
* на странице гостей /welcome и странице пользователя /user разные кнопки в зависимости от прав доступа
* на главной список пользователей разбит на страницы
* оистать страницы с пользователйми можно соотв. кнопками, или нажимая "вправо\влево" или "вверх\вниз" на клавиатуре
* для всех остальных действий на главной админа так же есть шорткаты: (n) новый пользователь (f) - фильтр (s) - поиск (r) - сбросить фильтр (m)- мой профиль (w) - welcome page
* фильтр есть строгий (filter) и нестрогий (search). 
	Filter для ввода "33 года, Миша, админ" выдаст только Миш 33 лет у которых только одна роль - админ.
	Search для ввода "1 год, 33 емейл, роль юзер" выдаст всех, у кого в возрасте есть хотя бы одна цифра 1, в емейле есть 33, и у кого при этом в числе прочих есть роль юзер
* при редактировании\создании пользователей идет проверка всех вводимых данных. 
	Из особенностей: поверка емейла ?@?.? проверка не занят ли логин и не занят ли емейл. 
	Если логин\емейл заняты или неправильно введено другое поле - ошибочное поле сбросится и будет предложено исправить. Корректно введенные данные не пропадут.
* роли везде в списках выводятся по порядку: админ\юзер\гость, никакого рандома свойственному ролям, хранящимся в "Set<Role>"'
* автонаполнение базы производится в ускоренном режиме методом "bulkSave", для шифрования задана минимальная степень защиты - и то и то вместе позволяют
		загрузить в БД в пределах тысячи пользователей не вызывая ощутимых тормозов при старте

<!-- полезное th:class="${#httpServletRequest.getMethod()}==POST? '' : 'show active'"-->
//document.querySelector('#id'+formName).value,

 <div th:fragment="name"> some code </div> А потом вставляешь <div th:insert="~{nameHtml :: name}"></div>
